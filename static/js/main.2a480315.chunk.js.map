{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","firstPage","lastPage","className","cn","disabled","href","onClickCapture","map","page","active","items","App","useState","setPerPage","setCurrentPage","startItem","endItem","length","id","value","onChange","event","Number","target","option","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAcjC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUJ,IAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,eApBS,WACVN,GACHL,EAAaD,EAAc,IAazB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQf,IAAgBc,IACrDF,eAAgB,kBAAMX,EAAaa,IAFrC,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GAHZ,SAKGA,SAKP,oBACEN,UAAWC,IAAG,YAAa,CAAEC,SAAUH,IACvCK,eArCW,WACVL,GACHN,EAAaD,EAAc,IAiC3B,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAAeJ,EAJjB,wBC7DFS,EAAQzB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPsB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAIIC,EAAY,EAEZrB,EAAc,IAChBqB,EAAYtB,EAAUC,EAAcD,GAGtC,IAAIuB,EAAUD,EAAYtB,EAM1B,OAJIuB,EAAUN,EAAMO,SAClBD,EAAUN,EAAMO,QAIhB,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAY,EAD7C,cACoDC,EADpD,eACkEN,EAAMO,OADxE,OAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAO1B,EACP2B,SAAU,SAACC,GACTR,EAAWS,OAAOD,EAAME,OAAOJ,QAC/BL,EAAe,IAPnB,SAxBQ,CAAC,EAAG,EAAG,GAAI,IAkCRP,KAAI,SAAAiB,GAAM,OAAI,wBAAQL,MAAOK,EAAf,SAAwBA,WAInD,uBAAOC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOkB,EAAMO,OACbxB,QAASA,EACTC,YAAaA,EACbC,aAAcmB,IAGhB,6BACGJ,EAAMgB,MAAMX,EAAWC,GACrBT,KAAI,SAAAoB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7D/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2a480315.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === totalPages;\n\n  const prevPage = () => {\n    if (!firstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (!lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClickCapture={prevPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={cn('page-item', { active: currentPage === page })}\n          onClickCapture={() => onPageChange(page)}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', { disabled: lastPage })}\n        onClickCapture={nextPage}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const options = [3, 5, 10, 20];\n\n  let startItem = 0;\n\n  if (currentPage > 1) {\n    startItem = perPage * currentPage - perPage;\n  }\n\n  let endItem = startItem + perPage;\n\n  if (endItem > items.length) {\n    endItem = items.length;\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(Number(event.target.value));\n              setCurrentPage(1);\n            }}\n          >\n            {options.map(option => <option value={option}>{option}</option>)}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {items.slice(startItem, endItem)\n          .map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}